---
title: "Fit LFI models"
author: "Max Lindmark"
date: today
date-format: iso
toc: true
format: 
  html:
    page-layout: full
    embed-resources: true
knitr: 
  opts_chunk:
    fig.align: center
    out-width: 100%
editor: source
---

## Load libraries

```{r load libraries}
#| message: false
#| warning: false

# Load libraries
library(tidyverse)
library(tidylog)
library(sdmTMB)
library(patchwork)
library(viridis)
library(RColorBrewer)
library(modelr)
library(ggstats)
library(ggtext)
library(ggspatial)
library(ggsidekick)
theme_set(theme_sleek())

home <- here::here()

source(paste0(home, "/R/map-plot.R"))
```

Read data and prediction grid, scale variables

```{r data}
#| message: false
# Read data

d <- read_csv(paste0(home, "/data/clean/lfi_data.csv")) |> 
  mutate(year_f = as.factor(year),
         log_depth = log(depth),
         log_depth_sc = (log_depth - mean(log_depth)) / sd(log_depth),
         log_depth_sq = log_depth_sc^2,
         year = as.integer(year)) |> 
  filter(!year == 1991)

names(d)

t <- d |> drop_na(tdepth)
t <- d |> drop_na(utc)

d$utc

pred_grid <- read_csv(paste0(home, "/data/clean/pred_grid.csv")) |> 
  drop_na(depth) |> 
  mutate(depth = ifelse(depth < 1, 1, depth)) |> 
  mutate(year_f = as.factor(year),
         log_depth = log(depth),
         log_depth_sc = (log_depth - mean(d$log_depth)) / sd(d$log_depth),
         log_depth_sq = log_depth_sc^2,
         year = as.integer(year)) |> 
  filter(!year == 1991) |> 
  mutate(times = mean(d$times))
```

##  Plot data

```{r}
plot_map_fc + 
  geom_point(data = d,
             aes(X*1000, Y*1000, color = gear_type), size = 0.8) +
  facet_wrap(~year, ncol = 9)

ggsave(paste0(home, paste("/figures/map.pdf")), width = 17, height = 19, units = "cm")
```

## Fit models

```{r}
mesh <- make_mesh(d, xy_cols = c("X", "Y"), cutoff = 20)

p_mesh <- ggplot() +
  inlabru::gg(mesh$mesh) +
  coord_fixed() +
  geom_point(aes(X, Y), data = d, alpha = 0.2, size = 0.5) +
  annotate("text", -Inf, Inf, label = paste("n knots = ", mesh$mesh$n), hjust = -0.1, vjust = 2) +
  labs(x = "Easting (km)", y = "Northing (km)")

p_mesh
```

```{r}
fit1 <- sdmTMB(lfi ~ year_f + s(times, bs = "cc") + log_depth_sc + log_depth_sq,
               data = d,
               mesh = mesh,
               family = delta_gamma(),
               spatiotemporal = "off",
               spatial = "on",
               time = "year")

fit2 <- sdmTMB(lfi ~ 1 + s(times, bs = "cc") + log_depth_sc + log_depth_sq,
               data = d,
               mesh = mesh,
               time_varying = ~ 1,
               time_varying_type = "rw0",
               family = delta_gamma(),
               extra_time = c(1991, 1993, 1997), 
               spatiotemporal = "off",
               spatial = "on",
               time = "year")

fit3 <- sdmTMB(lfi ~ 1 + s(times, bs = "cc") + log_depth_sc,
               data = d,
               mesh = mesh,
               time_varying = ~ 1,
               time_varying_type = "rw0",
               family = delta_gamma(),
               extra_time = c(1991, 1993, 1997), 
               spatiotemporal = "iid",
               spatial = "on",
               time = "year")

AIC(fit1, fit2, fit3)
```

## Check residuals

```{r}
# Residuals
simulate(fit3, nsim = 500, type = "mle-mvn") |>
  dharma_residuals(fit3, plot = FALSE) |>
  ggplot(aes(observed, expected)) +
  geom_point(color = "grey30", shape = 21, size = 0.5) +
  geom_abline(col = "tomato3", linewidth = 0.6) +
  theme(aspect.ratio = 1) +
  labs(x = "Observed", y = "Expected")

ggsave(paste0(home, "/figures/residuals.pdf"), width = 11, height = 11, units = "cm")
```

## Calculate indices

```{r}
# Get index
p <- predict(fit3, newdata = pred_grid, return_tmb_object = TRUE)

ind <- get_index(
  p, 
  bias_correct = FALSE, 
  area = 1 / nrow(pred_grid |> filter(year == max(year)))
  )

# Fit trend model
p1 <- ind |> 
  mutate(period = ifelse(year > 2017, "New", "Old")) |> 
  ggplot(aes(year, est, color = period, fill = period)) + 
  geom_errorbar(aes(ymin = lwr, ymax = upr), width = 0) +
  guides(color = "none", fill = "none") +
  scale_color_brewer(palette = "Set1") +
  geom_point(size = 2) +
  labs(y = "Predicted average LFI", x = "Year") + 
  theme(axis.title.x = element_blank()) +
  annotate("text", label = "(a)", x = Inf, y = Inf, vjust = 2, hjust = 1.5,
           color = "gray40", size = 4)

options(scipen=999)

# Trend lines
ind2 <- ind |> 
  filter(year > 2017) |> 
  mutate(cv = se / est,
         weight = 1/cv,
         weights_cs = weight / mean(weight),
         year_sc = (year - mean(year)) / sd(year),
         est_sc = est)

mt <- sdmTMB(est_sc ~ year_sc,
             family = Gamma(link = "log"),
             spatial = "off", 
             #weights = weights$weights_cs,
             data = ind2)

mt
sanity(mt)
tidy(mt)
tidy(mt, exponentiate = TRUE)

nd <- tibble(year = seq(min(ind2$year), max(ind2$year), length.out = 50)) |> 
  mutate(year_sc = (year - mean(year)) / sd(year))

pp <- predict(mt, newdata = nd, se_fit = TRUE) |> 
  mutate(est = est) |> 
  mutate(lwr = exp(est - est_se*1.96),
         upr = exp(est + est_se*1.96),
         est = exp(est))

p2 <- ind |> 
  filter(year > 2017) |> 
  mutate(period = ifelse(year > 2017, "New", "Old")) |> 
  ggplot(aes(year, est, color = period, fill = period)) + 
  geom_line(data = pp, aes(year, est), inherit.aes = FALSE,
            color = brewer.pal(n = 3, name = "Set1")[1], 
            linetype = "longdash") +
  geom_ribbon(data = pp, aes(year, est, ymin = lwr, ymax = upr), inherit.aes = FALSE,
              alpha = 0.2) +
  geom_errorbar(aes(ymin = lwr, ymax = upr), width = 0) +
  geom_point() +
  scale_color_brewer(palette = "Set1", direction = -1) +
  scale_fill_brewer(palette = "Set1", direction = -1) +
  guides(color = "none", fill = "none") +
  labs(y = "Predicted average LFI", x = "Year") +
  annotate("text", label = "(b)", x = Inf, y = Inf, vjust = 2, hjust = 1.5,
           color = "gray40", size = 4)

(p1 / p2) + plot_layout(axes = "collect")

ggsave(paste0(home, "/figures/lfi_index.pdf"), width = 14, height = 17, units = "cm")
```

## Make map plots

```{r}
# Plot map predictions
plot_map +
  geom_raster(data = p$data |> filter(year == max(year)),
              aes(X*1000, Y*1000, fill = omega_s1)) +
  scale_fill_gradient2() + 
  geom_sf()

plot_map + 
  geom_raster(data = p$data |> filter(year == max(year)),
              aes(X*1000, Y*1000, fill = omega_s2)) +
  scale_fill_gradient2() + 
  geom_sf()

plot_map + 
  geom_raster(data = p$data, aes(X*1000, Y*1000, fill = epsilon_st1)) +
  scale_fill_gradient2() +  
  facet_wrap(~year, ncol = 8) +
  geom_sf()

plot_map + 
  geom_raster(data = p$data, aes(X*1000, Y*1000, fill = epsilon_st2)) +
  scale_fill_gradient2() +  
  facet_wrap(~year, ncol = 8) +
  geom_sf()
```

## Sensitivity

Run the index only below 59.6 latitude

```{r}
ggplot(d, aes(lon, lat)) + 
  geom_point() + 
  geom_hline(yintercept = 59.6)

# Get index
p2 <- predict(fit3,
              newdata = pred_grid |> filter(lat < 59.6),
              return_tmb_object = TRUE)

ind2 <- get_index(
  p2, 
  bias_correct = FALSE, 
  area = 1 / nrow(pred_grid |>
                    filter(lat < 59.6 & year == max(year)))
  )

bind_rows(
  ind |> mutate(prediction = "full"),
  ind2 |> mutate(prediction = "subset")
  ) |>
  ggplot(aes(year, est, color = prediction, fill = prediction)) + 
  geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.3, color = NA) +
  geom_line() + 
  scale_y_continuous(trans = "sqrt") +
  labs(y = "Predicted average LFI", x = "Year")
```

Fit with trawl depth

```{r}
fit3b <- sdmTMB(lfi ~ 1 + s(times, bs = "cc") + log_depth_sc + tdepth,
                data = d,
                mesh = mesh,
                time_varying = ~ 1,
                time_varying_type = "rw0",
                family = delta_gamma(),
                extra_time = c(1991, 1993, 1997), 
                spatiotemporal = "iid",
                spatial = "on",
                time = "year")

sanity(fit3b)

# Get index
p3 <- predict(fit3b,
              newdata = pred_grid |> mutate(tdepth = mean(d$tdepth, na.rm = TRUE)),
              return_tmb_object = TRUE)

ind3 <- get_index(
  p3, 
  bias_correct = FALSE, 
  area = 1 / nrow(pred_grid |>
                    filter(year == max(year)))
  )

bind_rows(
  ind |> mutate(prediction = "full"),
  ind2 |> mutate(prediction = "subset"),
  ind3 |> mutate(prediction = "tdepth")
  ) |>
  ggplot(aes(year, est, color = prediction, fill = prediction)) + 
  geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.3, color = NA) +
  geom_line() + 
  scale_y_continuous(trans = "sqrt") +
  scale_color_brewer(palette = "Set2") +
  scale_fill_brewer(palette = "Set2") +
  labs(y = "Predicted average LFI", x = "Year")

ggsave(paste0(home, "/figures/lfi_index_sensi.pdf"), width = 14, height = 11, units = "cm")
```


